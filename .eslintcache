[{"/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js":"1","/Users/derricklam/Document/decipher/my-app/src/Components/Home.js":"2","/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js":"3","/Users/derricklam/Document/decipher/my-app/src/App.js":"4","/Users/derricklam/Document/decipher/my-app/src/Components/Settings.js":"5","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js":"6","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultCards.js":"7","/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js":"8","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js":"9","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultsModal.js":"10"},{"size":1691,"mtime":1610492242435,"results":"11","hashOfConfig":"12"},{"size":7864,"mtime":1610494686763,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609473578156,"results":"14","hashOfConfig":"12"},{"size":394,"mtime":1609875933838,"results":"15","hashOfConfig":"12"},{"size":2577,"mtime":1610494158647,"results":"16","hashOfConfig":"12"},{"size":442,"mtime":1609791742742,"results":"17","hashOfConfig":"12"},{"size":1760,"mtime":1610243044024,"results":"18","hashOfConfig":"12"},{"size":5164,"mtime":1610496515850,"results":"19","hashOfConfig":"12"},{"size":407,"mtime":1610072761145,"results":"20","hashOfConfig":"12"},{"size":1135,"mtime":1610241429670,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"27eoqo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Home.js",["43","44","45","46","47","48"],"import React, {useState, useEffect, useReducer} from 'react';\nimport { HistoryCard } from './HistoryCard'\nimport { InputForm } from './InputForm'\nimport {Settings} from './Settings'\nimport { ErrorModal } from './Modal/ErrorModal'\nimport { ResultsModal } from './Modal/ResultsModal'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport settings from '../Icons/settings.png'\nimport history from '../Icons/history.png'\n\nimport { Row, Col, Card, Tab, Tabs} from 'react-bootstrap'\n\nexport const Home = () => {\n    const [showErrorModal, setErrorModal] = useState(false);\n    const handleCloseError = () => setErrorModal(false);\n    const handleShowError = () => {\n        setErrorModal(true);\n        setResultsModal(false);\n    }\n\n    const [showResultsModal, setResultsModal] = useState(false);\n    const handleCloseResults = () => {\n        setResultsModal(false);\n        setResults([])\n    }\n    const handleShowResults = () => setResultsModal(true);\n    const [results, setResults] = useState([]);\n\n    const [cards, setCards] = useState([]) // [{'content': 'hello', 'key': 'key', 'translated': 'translated'}]\n    const [cardId, setCardId] = useState(0)\n    const [type, setType] = useState('#decrypt')\n    const [save, setSave] = useState(true)\n\n    const [ic, setIc] = useState(0.0615)\n    const [freqTable, setFreqTable] = useState(\"wiki\")\n\n    const [keyError, setKeyError] = useState(false)\n    const [lengthError, setLengthError] = useState(false)\n\n\n    const [userInput, setUserInput] = useReducer(\n        (state, newState) => ({...state,  ...newState}),\n        {\n            addCard: '',\n            key: '',\n            keyLength: '',\n            translated: ''\n        }\n    )\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setUserInput({[name]:value})\n        if(name===\"key\"){\n            if(value===\"\")setKeyError(false);\n            setUserInput({keyLength: ''});\n        }\n        if(name===\"keyLength\"){\n            if(value===\"\")setLengthError(false);\n            setUserInput({key: ''});\n        }\n    }\n\n    const handleFormSubmit = () => {\n        var sendJob = true\n        if (/[^a-zA-Z]/.test(userInput.key)){\n            setKeyError(true)\n            sendJob =false\n        }else{\n            setKeyError(false)\n        }\n        if(isNaN(userInput.keyLength)){\n            setLengthError(true)\n            sendJob =false\n        }else{\n            setLengthError(false)\n        }\n\n        if(sendJob){\n            if (type==='#decrypt' && userInput.key===\"\" && userInput.keyLength===\"\"){\n                handleShowResults();\n            }\n            fetch('api/create', {\n                method: 'POST',\n                body: JSON.stringify({\n                    content: userInput.addCard,\n                    key: userInput.key,\n                    keyLength: userInput.keyLength,\n                    type: type,\n                    save: save,\n\n                    ic: ic,\n                    freqTable: freqTable\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            }).then(response => response.json())\n            .then(message=> {\n                    console.log(message)\n                    if(message['error']==='true'){\n                        handleShowError();\n                    }else if(message['multiple']==='true'){\n                        setResults(message['results'])\n                    }else{\n                        setResultsModal(false);\n                        setUserInput({translated: message['translatedText'] });\n                        setUserInput({key: message['key'] });\n                        if (save){\n                            addToCards(userInput.addCard, userInput.key, message['translatedText'], type)\n                        }\n                    }\n            })\n        }\n    }\n\n    const addToCards = (addCard, key, translated, type) => {\n        cards.push({'id': cardId, 'content': addCard, 'key': key, \n            'translated': translated, 'translateType': type})\n        setCardId(cardId+1)\n        console.log(cards)\n    }\n\n\n    const handleFormClear = () => {\n        setUserInput({addCard: ''});\n        setUserInput({key: ''});\n        setUserInput({keyLength: ''});\n        setUserInput({translated: ''});\n        setLengthError(false)\n        setKeyError(false)\n\n    }\n    const handleCardClick = (id) => {\n        for(var i=0; i<cards.length; i ++){\n            if (cards[i]['id'] == id){\n                setUserInput({addCard: cards[i].content});\n                setUserInput({key: cards[i].key});\n                setUserInput({translated: cards[i].translated});\n                break;\n            }\n        }\n    }\n    const handleCardDelete = (id) =>{\n        for(var i=0; i<cards.length; i ++){\n            if (cards[i]['id'] == id){\n                cards.splice(i, 1);\n                setUserInput();\n                break;\n            }\n        }\n    }\n\n    const handleToggle = (event) => {\n        setType(event)\n    }\n\n    const handleSwap = () =>{\n        var temp = userInput.addCard;\n        setUserInput({addCard: userInput.translated});\n        setUserInput({translated: temp});\n    }\n    const handleSwitch = () => {\n        setSave(!save)\n    }\n\n    const handleClearKey = () => {\n        setUserInput({keyLength: ''});\n    }\n\n    const handleIcChange = (icChange) => {\n        setIc(icChange/10000)\n        console.log(icChange)\n    }\n\n    const handleFreqChange = (event) => {\n        setFreqTable(event)\n        console.log(event)\n    }\n\n    const handleSelect = (key, value) => {\n        setUserInput({translated: value});\n        setUserInput({key: key});\n        handleCloseResults();\n        setResults([]);\n\n        if (save){\n            addToCards(userInput.addCard, key, userInput.translated, type)\n        }\n    }\n\n    return (\n        <div className=\"home-wrapper\">\n            <ErrorModal showModal={showErrorModal} onClose={handleCloseError}/>\n            <ResultsModal showModal={showResultsModal} onClose={handleCloseResults} cards={results} onSelect={handleSelect}/>\n            <Row className=\"home\">\n                <Col md={8} className=\"inputForm\">\n                    <InputForm userInput={userInput} setUserInput={setUserInput} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} \n                    onFormClear={handleFormClear} onToggle={handleToggle} onSwap={handleSwap} onSwitch={handleSwitch} onClearKey={handleClearKey} \n                    onKeyError={keyError} onLengthError={lengthError}/>\n                </Col>\n\n                <Col className=\"tabs\" >    \n                    <Tabs className=\"tabs-header\"defaultActiveKey=\"history\" id=\"uncontrolled-tab-example\"  >\n                         <Tab eventKey=\"history\" title={<span>History<img className=\"icons\" height={18} src={history}/></span>} \n                            style={{ width: \"auto\", height: window.innerHeight-166, paddingRight:0}}>\n                             <PerfectScrollbar>\n                                 <Card.Body>\n                                 <HistoryCard cards={cards} type={type} onCardClick={handleCardClick} onCardDelete={handleCardDelete}/>\n                                 </Card.Body>\n                             </PerfectScrollbar>\n                         </Tab>\n                        <Tab eventKey=\"advanced\" title={<span>Advanced Settings<img className=\"icons\" height={18} src={settings}/></span>}\n                             style={{ width: \"auto\", height: window.innerHeight-166, paddingRight:0}}>  \n                            <Settings onIcChange={handleIcChange} onFreqChange={handleFreqChange} freqTable={freqTable}/>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n            <br />\n        </div>\n    )\n}","/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js",[],"/Users/derricklam/Document/decipher/my-app/src/App.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Settings.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js",["49"],"/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultCards.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultsModal.js",[],{"ruleId":"50","severity":1,"message":"51","line":1,"column":26,"nodeType":"52","messageId":"53","endLine":1,"endColumn":35},{"ruleId":"50","severity":1,"message":"54","line":30,"column":19,"nodeType":"52","messageId":"53","endLine":30,"endColumn":27},{"ruleId":"55","severity":1,"message":"56","line":137,"column":32,"nodeType":"57","messageId":"58","endLine":137,"endColumn":34},{"ruleId":"55","severity":1,"message":"56","line":147,"column":32,"nodeType":"57","messageId":"58","endLine":147,"endColumn":34},{"ruleId":"59","severity":1,"message":"60","line":206,"column":70,"nodeType":"61","endLine":206,"endColumn":120},{"ruleId":"59","severity":1,"message":"60","line":214,"column":80,"nodeType":"61","endLine":214,"endColumn":131},{"ruleId":"59","severity":1,"message":"60","line":15,"column":17,"nodeType":"61","endLine":15,"endColumn":62},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCards' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]