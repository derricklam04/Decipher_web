[{"/Users/derricklam/Document/decipher/my-app/src/Components/CardStack.js":"1","/Users/derricklam/Document/decipher/my-app/src/App.js":"2","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Clear.js":"3","/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js":"4","/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js":"5","/Users/derricklam/Document/decipher/my-app/src/index.js":"6","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js":"7","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js":"8","/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js":"9","/Users/derricklam/Document/decipher/my-app/src/Components/NavBar.js":"10","/Users/derricklam/Document/decipher/my-app/src/Components/Footer.js":"11"},{"size":4389,"mtime":1609818710216,"results":"12","hashOfConfig":"13"},{"size":409,"mtime":1609798046376,"results":"14","hashOfConfig":"13"},{"size":345,"mtime":1609702840157,"results":"15","hashOfConfig":"13"},{"size":4207,"mtime":1609795883972,"results":"16","hashOfConfig":"13"},{"size":1446,"mtime":1609819327734,"results":"17","hashOfConfig":"13"},{"size":501,"mtime":1609721557766,"results":"18","hashOfConfig":"13"},{"size":442,"mtime":1609791742742,"results":"19","hashOfConfig":"13"},{"size":407,"mtime":1609791757678,"results":"20","hashOfConfig":"13"},{"size":362,"mtime":1609473578156,"results":"21","hashOfConfig":"13"},{"size":715,"mtime":1609817233137,"results":"22","hashOfConfig":"13"},{"size":383,"mtime":1609816842426,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"27eoqo",{"filePath":"27","messages":"28","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/derricklam/Document/decipher/my-app/src/Components/CardStack.js",["50"],"import React, {useState, useEffect, useReducer} from 'react';\nimport { HistoryCard } from './HistoryCard'\nimport { InputForm } from './InputForm'\nimport { Row, Col, Card, Nav, Navbar} from 'react-bootstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\n\nexport const CardStack = () => {\n\n    const [cards, setCards] = useState([])\n    const [type, setType] = useState('#encrypt')\n    const [save, setSave] = useState(true)\n\n    const [userInput, setUserInput] = useReducer(\n        (state, newState) => ({...state,  ...newState}),\n        {\n            addCard: '',\n            key: '',\n            keyLength: '',\n            translated: ''\n        }\n    )\n\n    useEffect(()=>{\n        fetch('/api').then(response => {\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setCards(data))\n    },[])\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setUserInput({[name]:value})\n    }\n\n    const handleFormSubmit = () => {\n        fetch('/api/create', {\n            method: 'POST',\n            body: JSON.stringify({\n                content: userInput.addCard,\n                key: userInput.key,\n                keyLength: userInput.keyLength,\n                type: type,\n                save: save\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        }).then(response => response.json())\n          .then(message=> {\n                console.log(message)\n                setUserInput({translated: message['translatedText'] });\n                setUserInput({key: message['key'] });\n                updateCardStack()\n        })\n    }\n\n    const handleFormClear = () => {\n        setUserInput({addCard: ''});\n        setUserInput({key: ''});\n        setUserInput({keyLength: ''});\n        setUserInput({translated: ''});\n\n    }\n\n    const updateCardStack = () => {\n        fetch('/api').then(response =>{\n            if(response.ok){\n                return response.json()\n            }\n        }).then(data => setCards(data))\n    }\n\n    const handleCardClick = (card) => {\n        setUserInput({addCard: card.content});\n        setUserInput({key: card.key});\n        setUserInput({translated: card.translated});\n    }\n\n    const handleCardDelete = (cardID) =>{\n        fetch('/api/'+cardID, {\n            method: 'POST',\n            body: JSON.stringify({\n                id: cardID\n            })\n        }).then(response => response.json())\n            .then(data => {\n                console.log(data)\n                updateCardStack()\n        })\n    }\n\n    const handleToggle = (event) => {\n        setType(event)\n    }\n\n    const handleSwap = () =>{\n        var temp = userInput.addCard;\n        setUserInput({addCard: userInput.translated});\n        setUserInput({translated: temp});\n    }\n\n    const handleSwitch = () => {\n        setSave(!save)\n    }\n\n    const handleClearKey = () => {\n        setUserInput({keyLength: ''});\n    }\n\n    return (\n        <div className=\"home-wrapper\">\n            <Row className=\"home\">\n                <Col md={8} className=\"inputForm\">\n                    <InputForm userInput={userInput} setUserInput={setUserInput} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} \n                    onFormClear={handleFormClear} onToggle={handleToggle} onSwap={handleSwap} onSwitch={handleSwitch} onClearKey={handleClearKey}/>\n                </Col>\n\n                <Col className=\"history\" >      \n                    <Card style={{ width: \"auto\", height: '37rem', paddingRight:0}}>\n                        <Card.Header  >\n                            <Nav variant=\"tabs\" defaultActiveKey=\"history\">\n                            <Nav.Item>\n                                <Nav.Link href=\"history\">History</Nav.Link>\n                            </Nav.Item>\n                            </Nav>\n                        </Card.Header>\n                        <PerfectScrollbar>\n                            <Card.Body>\n                            <HistoryCard cards={cards} type={type} onCardClick={handleCardClick} onCardDelete={handleCardDelete}/>\n                            </Card.Body>\n                        </PerfectScrollbar>\n                        \n                    </Card>\n                </Col>\n            </Row>\n            <br />\n        </div>\n    )\n}","/Users/derricklam/Document/decipher/my-app/src/App.js",["51"],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Clear.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js",[],["52","53"],"/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js",["54","55"],"/Users/derricklam/Document/decipher/my-app/src/index.js",[],["56","57"],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js",["58"],"import React from 'react';\nimport { Button } from 'react-bootstrap'\nimport icon from \"../../Icons/swap.png\"\n\nexport const Swap = ({onSwap, disabled}) => {\n\n\n    const handleSwap = () => {\n        onSwap()\n    }\n\n    return (\n        <div>\n            <Button className=\"swap\" onClick={handleSwap} variant=\"primary\" disabled={disabled}>\n                <img className=\"img\" height=\"24\" src={icon}/>\n            </Button>\n        </div>\n    )\n}","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js",[],"/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/NavBar.js",["59"],"/Users/derricklam/Document/decipher/my-app/src/Components/Footer.js",[],{"ruleId":"60","severity":1,"message":"61","line":4,"column":31,"nodeType":"62","messageId":"63","endLine":4,"endColumn":37},{"ruleId":null,"fatal":true,"severity":2,"message":"64","line":4,"column":10},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"60","severity":1,"message":"69","line":2,"column":24,"nodeType":"62","messageId":"63","endLine":2,"endColumn":27},{"ruleId":"60","severity":1,"message":"70","line":2,"column":29,"nodeType":"62","messageId":"63","endLine":2,"endColumn":32},{"ruleId":"65","replacedBy":"71"},{"ruleId":"67","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":15,"column":17,"nodeType":"75","endLine":15,"endColumn":62},{"ruleId":"73","severity":1,"message":"74","line":8,"column":45,"nodeType":"75","endLine":8,"endColumn":93},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","Parsing error: Identifier 'NavBar' has already been declared\n\n  2 | import { CardStack } from './Components/CardStack'\n  3 | import { NavBar} from './Components/NavBar'\n> 4 | import { NavBar} from './Components/NavBar'\n    |          ^\n  5 | \n  6 | \n  7 | import 'bootstrap/dist/css/bootstrap.min.css';","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'Row' is defined but never used.","'Col' is defined but never used.",["76"],["77"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]