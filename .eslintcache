[{"/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js":"1","/Users/derricklam/Document/decipher/my-app/src/Components/Home.js":"2","/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js":"3","/Users/derricklam/Document/decipher/my-app/src/App.js":"4","/Users/derricklam/Document/decipher/my-app/src/Components/Settings.js":"5","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js":"6","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultCards.js":"7","/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js":"8","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js":"9","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultsModal.js":"10","/Users/derricklam/Document/decipher/my-app/src/index.js":"11","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/WelcomeModal.js":"12","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ErrorModal.js":"13","/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Clear.js":"14","/Users/derricklam/Document/decipher/my-app/src/Components/NavBar.js":"15","/Users/derricklam/Document/decipher/my-app/src/Components/Footer.js":"16"},{"size":2258,"mtime":1610668735011,"results":"17","hashOfConfig":"18"},{"size":8856,"mtime":1610681119277,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1609473578156,"results":"20","hashOfConfig":"18"},{"size":2416,"mtime":1610682392125,"results":"21","hashOfConfig":"18"},{"size":2603,"mtime":1610681029491,"results":"22","hashOfConfig":"18"},{"size":442,"mtime":1609791742742,"results":"23","hashOfConfig":"18"},{"size":1790,"mtime":1610665384137,"results":"24","hashOfConfig":"18"},{"size":5081,"mtime":1610681516444,"results":"25","hashOfConfig":"18"},{"size":520,"mtime":1610681420667,"results":"26","hashOfConfig":"18"},{"size":1562,"mtime":1610665473428,"results":"27","hashOfConfig":"18"},{"size":718,"mtime":1610230658608,"results":"28","hashOfConfig":"18"},{"size":1014,"mtime":1610508892407,"results":"29","hashOfConfig":"18"},{"size":1144,"mtime":1610334166718,"results":"30","hashOfConfig":"18"},{"size":345,"mtime":1609702840157,"results":"31","hashOfConfig":"18"},{"size":466,"mtime":1610676635145,"results":"32","hashOfConfig":"18"},{"size":411,"mtime":1610668829487,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"27eoqo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/derricklam/Document/decipher/my-app/src/Components/HistoryCard.js",["75"],"import React from 'react';\nimport { Card, Button, Row, Col} from 'react-bootstrap'\nimport arrow from '../Icons/right-arrow.png'\n\n\n\nexport const HistoryCard = ({cards, onCardClick, onCardDelete}) => {\n\n    const handleClick = (id) =>{\n        onCardClick(id)\n    }\n    const handleDelete = (event, id) =>{\n        event.stopPropagation()\n        onCardDelete(id)\n    }\n\n    if(cards.length === 0){\n        return (\n            <p className=\"empty\">No History to Display</p>\n        )\n    }\n    else{\n\n        return(\n            <div id=\"scrollBar\">\n                {cards.slice(0).reverse().map((card) => {\n                    return(\n                    <>\n                        <Card className=\"historyCard\" style={{ width: 'auto', height: '9.3rem'}} key={card.id} >\n                            \n                            <Card.Body>\n                                <Card.Subtitle style={{maxHeight: '1rem', maxWidth:'25rem', overflow:\"hidden\"}}>{card.key}</Card.Subtitle>\n                                <Row>\n                                    <Col>\n                                    <Card.Text style={{ maxHeight: '4.5rem', maxWidth:'12rem', overflow:\"hidden\"}} >{card.content}</Card.Text>\n                                    </Col>\n                                    <img className=\"arrow\" height={15} src={arrow}/>\n                                    <Col>\n                                    <Card.Text style={{maxHeight: '4.5rem', maxWidth:'12rem', overflow:\"hidden\"}} >{card.translated}</Card.Text>\n                                    </Col>\n                                </Row>\n                            </Card.Body>\n                            <Card.Header style={{ width: 'auto'}}>\n                                    <Card.Text style={{color:\"#525252\"}}>{card.translateType}ed</Card.Text>\n                                    <Button size=\"sm\" variant=\"danger\" onClick={(event) => handleDelete(event, card.id)}>Remove</Button>\n                                    <Button size=\"sm\" variant=\"outline-info\" onClick={() => handleClick(card.id)}>View</Button>\n\n                            </Card.Header>\n                        </Card>\n                    </>\n                    )\n                })}\n            </div>\n        )\n    }\n}","/Users/derricklam/Document/decipher/my-app/src/Components/Home.js",["76","77","78","79"],"/Users/derricklam/Document/decipher/my-app/src/reportWebVitals.js",[],["80","81"],"/Users/derricklam/Document/decipher/my-app/src/App.js",["82","83"],"/Users/derricklam/Document/decipher/my-app/src/Components/Settings.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Swap.js",["84"],"import React from 'react';\nimport { Button } from 'react-bootstrap'\nimport icon from \"../../Icons/swap.png\"\n\nexport const Swap = ({onSwap, disabled}) => {\n\n\n    const handleSwap = () => {\n        onSwap()\n    }\n\n    return (\n        <div>\n            <Button className=\"swap\" onClick={handleSwap} variant=\"primary\" disabled={disabled}>\n                <img className=\"img\" height=\"24\" src={icon}/>\n            </Button>\n        </div>\n    )\n}","/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultCards.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/InputForm.js",["85"],"import React, {useState} from 'react';\nimport { Clear } from './Buttons/Clear'\nimport { Swap } from './Buttons/Swap'\nimport { ReactComponent as Lock} from '../Icons/lock.svg'\nimport { ReactComponent as Unlock} from '../Icons/unlock.svg'\n\n\nimport { Card, Nav, Form, Button, Col, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n\n\nexport const InputForm = ( {userInput, onFormChange, onFormSubmit, onFormClear, onToggle, onSwap, onSwitch, onClearKey, onKeyError, onLengthError} ) => {\n\n    const [disableKeyLength, setDisableKeyLength] = useState(false)\n    const [requireKey, setRequireKey] = useState(false)\n    const [lockColor, setLockColor] = useState(\"#4287f5\")\n    const [unlockColor, setUnlockColor] = useState(\"black\")\n\n    const [placeholder, setPlaceholder] = useState(\"Input Here... \\n\\nLeave 'Key' or 'Key Length' empty if unknown\")\n\n    const handleChange = (event) => {\n        onFormChange(event)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        onFormSubmit()\n        \n    }\n\n    const handleClear = () => {\n        onFormClear()\n    }\n\n    const handleToggle = (event) => {\n        onToggle(event)\n        if(event === \"#encrypt\"){\n            setDisableKeyLength(true)\n            setRequireKey(true)\n            setLockColor(\"black\")\n            setUnlockColor(\"#4287f5\")\n\n            onClearKey()\n            setPlaceholder(\"Input Here...\")\n\n        }else if(event === \"#decrypt\"){\n            setDisableKeyLength(false)\n            setRequireKey(false)\n            setLockColor(\"#4287f5\")\n            setUnlockColor(\"black\")\n\n            setPlaceholder(\"Input Here... \\n\\nLeave 'Key' or 'Key Length' empty if unknown\")\n        }\n    }\n\n    const handleSwap = () => {\n        onSwap()\n    }\n\n    const handleSwitch = () => {\n        onSwitch()\n    }\n    \n    return(\n        <>        \n        <Card style={{height: window.innerHeight-110}}>\n            <Card.Header>\n                <Nav variant=\"tabs\" defaultActiveKey=\"#decrypt\" onSelect={handleToggle}>\n                <Nav.Item>\n                    <Nav.Link href=\"#decrypt\" >Decrypt<Unlock className=\"locks\" style={{height:16, width:16}} fill={unlockColor}/></Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"#encrypt\" >Encrypt<Lock className=\"locks\" style={{height:16, width:16}} fill={lockColor}/></Nav.Link>\n                </Nav.Item>\n                </Nav>\n            </Card.Header>\n            <Card.Body>\n                <Form onSubmit={handleSubmit} noValidate>\n                    <Form.Group>\n                        <Form.Control as=\"textarea\" placeholder={placeholder} rows={8} name=\"addCard\" required \n                            value={userInput.addCard} onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                    <Form.Row>\n                        <Col md={5}>\n                        <OverlayTrigger key='bottom' placement='bottom' \n                            overlay={<Tooltip >Enter <strong>English Letters</strong> Only</Tooltip>}>\n                            <Form.Control type=\"search\" placeholder=\"Enter Key\" name=\"key\" \n                            value={userInput.key} isInvalid={onKeyError} onChange={handleChange} />\n                        </OverlayTrigger>\n                        </Col>\n\n                        <Col md={2}>\n                        <OverlayTrigger key='bottom' placement='bottom' \n                            overlay={<Tooltip>Enter <strong>Numbers</strong> only</Tooltip>}>\n                            <Form.Control type=\"search\" placeholder=\"Key Length\" name=\"keyLength\" isInvalid={onLengthError} \n                                value={userInput.keyLength} onChange={handleChange} disabled={disableKeyLength}/>\n                        </OverlayTrigger>\n                        </Col>\n                        <Col md={{offset:1, span:0}} >\n                            <Swap onSwap={handleSwap} disabled={userInput.addCard === \"\" && userInput.translated === \"\"}/>\n                        </Col>\n                        <Col md=\"auto\" className=\"clearBtn\">\n                            <Clear onFormClear={handleClear} \n                                disabled={userInput.addCard === \"\" && userInput.key === \"\" && userInput.keyLength ===\"\" && userInput.translated === \"\"}/>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button variant=\"success\" type=\"submit\" \n                            disabled={(requireKey===true && userInput.key === \"\") || userInput.addCard === \"\"}> \n                            Submit </Button>\n                        </Col>\n                    </Form.Row>\n                    </Form.Group>\n\n                    \n                    <Form.Group>\n                        <Form.Control as=\"textarea\" rows={8} placeholder =\"Output Here...\" name=\"translated\" value={userInput.translated} onChange={handleChange}/>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n        </>\n\n        \n    )\n}",["86","87"],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Switch.js",["88","89"],"/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ResultsModal.js",[],"/Users/derricklam/Document/decipher/my-app/src/index.js",[],["90","91"],"/Users/derricklam/Document/decipher/my-app/src/Components/Modal/WelcomeModal.js",["92"],"import React from 'react';\nimport { Button, Modal } from 'react-bootstrap'\nimport Swal from 'sweetalert2'\n\nexport const WelcomeModal = ({showModal, onClose}) => {\n    const handleClose = () => {\n      onClose()\n    }\n    return (\n      <>\n      \n        <Modal\n          size=\"lg\"\n          show={showModal}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          centered\n        >\n          <Modal.Header style={{backgroundColor:'#baedff', display: \"flex\",justifyContent: \"center\",alignItems: \"center\"}}>\n            <Modal.Title style={{color:\"#383838\"}}>Welcome to Vigenère Code Cracker!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>To get started, \n          </Modal.Body>\n          <Modal.Footer style={{backgroundColor:\"#f5f5f5\",paddingBottom:'0', paddingTop:'0'}}>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Let's get Started\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n  ",["93","94"],"/Users/derricklam/Document/decipher/my-app/src/Components/Modal/ErrorModal.js",[],["95","96"],"/Users/derricklam/Document/decipher/my-app/src/Components/Buttons/Clear.js",[],"/Users/derricklam/Document/decipher/my-app/src/Components/NavBar.js",["97"],"/Users/derricklam/Document/decipher/my-app/src/Components/Footer.js",[],{"ruleId":"98","severity":1,"message":"99","line":37,"column":37,"nodeType":"100","endLine":37,"endColumn":85},{"ruleId":"101","severity":1,"message":"102","line":1,"column":26,"nodeType":"103","messageId":"104","endLine":1,"endColumn":35},{"ruleId":"101","severity":1,"message":"105","line":42,"column":19,"nodeType":"103","messageId":"104","endLine":42,"endColumn":27},{"ruleId":"106","severity":1,"message":"107","line":160,"column":32,"nodeType":"108","messageId":"109","endLine":160,"endColumn":34},{"ruleId":"106","severity":1,"message":"107","line":170,"column":32,"nodeType":"108","messageId":"109","endLine":170,"endColumn":34},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"101","severity":1,"message":"114","line":5,"column":10,"nodeType":"103","messageId":"104","endLine":5,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":53,"column":7,"nodeType":"100","endLine":53,"endColumn":59},{"ruleId":"98","severity":1,"message":"99","line":15,"column":17,"nodeType":"100","endLine":15,"endColumn":62},{"ruleId":"101","severity":1,"message":"115","line":60,"column":11,"nodeType":"103","messageId":"104","endLine":60,"endColumn":23},{"ruleId":"110","replacedBy":"116"},{"ruleId":"112","replacedBy":"117"},{"ruleId":"101","severity":1,"message":"118","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":16,"column":13,"nodeType":"100","endLine":16,"endColumn":124},{"ruleId":"110","replacedBy":"121"},{"ruleId":"112","replacedBy":"122"},{"ruleId":"101","severity":1,"message":"123","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":12},{"ruleId":"110","replacedBy":"124"},{"ruleId":"112","replacedBy":"125"},{"ruleId":"110","replacedBy":"126"},{"ruleId":"112","replacedBy":"127"},{"ruleId":"101","severity":1,"message":"128","line":3,"column":8,"nodeType":"103","messageId":"104","endLine":3,"endColumn":13},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCards' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["129"],"no-negated-in-lhs",["130"],"'ResultsModal' is defined but never used.","'handleSwitch' is assigned a value but never used.",["129"],["130"],"'Form' is defined but never used.","react/jsx-pascal-case","Imported JSX component _Switch must be in PascalCase or SCREAMING_SNAKE_CASE",["129"],["130"],"'Swal' is defined but never used.",["129"],["130"],["129"],["130"],"'title' is defined but never used.","no-global-assign","no-unsafe-negation"]