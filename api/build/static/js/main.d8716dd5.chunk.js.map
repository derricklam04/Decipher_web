{"version":3,"sources":["Components/Buttons/Clear.js","Icons/swap.png","Components/Buttons/Swap.js","Components/InputForm.js","Components/Settings.js","Components/Modal/ErrorModal.js","Components/Modal/ResultCards.js","Components/Modal/ResultsModal.js","Components/Home.js","Icons/title.png","Components/NavBar.js","Components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Clear","onFormClear","disabled","Button","onClick","variant","type","Swap","onSwap","className","height","src","icon","InputForm","userInput","onFormChange","onFormSubmit","onToggle","onClearKey","onSwitch","onKeyError","onLengthError","useState","disableKeyLength","setDisableKeyLength","requireKey","setRequireKey","placeholder","setPlaceholder","handleChange","event","Card","style","window","innerHeight","Header","Nav","defaultActiveKey","onSelect","Item","Link","href","Body","Form","onSubmit","preventDefault","noValidate","Group","Control","as","rows","name","required","value","addCard","onChange","Row","Col","md","OverlayTrigger","placement","overlay","Tooltip","key","isInvalid","keyLength","offset","span","translated","Settings","onIcChange","onFreqChange","freqTable","ic","setIc","Label","Text","xs","min","max","e","target","tooltipLabel","onAfterChange","htmlSize","defaultValue","ErrorModal","showModal","onClose","handleClose","Modal","size","show","onHide","backdrop","keyboard","centered","backgroundColor","textAlign","Title","color","Footer","paddingBottom","paddingTop","ResultCards","cards","length","width","id","Object","entries","map","Subtitle","maxHeight","maxWidth","overflow","handleSelect","ResultsModal","closeButton","Home","showErrorModal","setErrorModal","showResultsModal","setResultsModal","handleCloseResults","setResults","results","setType","setFreqTable","keyError","setKeyError","lengthError","setLengthError","useReducer","state","newState","setUserInput","sendJob","test","isNaN","console","log","fetch","method","body","JSON","stringify","content","headers","then","response","json","message","temp","Tabs","Tab","eventKey","title","paddingRight","icChange","NavBar","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","fixed","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8716dd5.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap'\n\n\n\nexport const Clear = ({onFormClear, disabled}) => {\n\n\n    const handleClear = () => {\n        onFormClear()\n    }\n\n    return (\n        <div>\n            <Button onClick={handleClear} variant=\"primary\" type=\"submit\" disabled={disabled}>Clear</Button>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/swap.6d10d97b.png\";","import React from 'react';\nimport { Button } from 'react-bootstrap'\nimport icon from \"../../Icons/swap.png\"\n\nexport const Swap = ({onSwap, disabled}) => {\n\n\n    const handleSwap = () => {\n        onSwap()\n    }\n\n    return (\n        <div>\n            <Button className=\"swap\" onClick={handleSwap} variant=\"primary\" disabled={disabled}>\n                <img className=\"img\" height=\"24\" src={icon}/>\n            </Button>\n        </div>\n    )\n}","import React, {useState} from 'react';\nimport { Clear } from './Buttons/Clear'\nimport { Swap } from './Buttons/Swap'\nimport { Switch } from './Buttons/Switch'\n\nimport { Card, Nav, Form, Button, Col, OverlayTrigger, Tooltip } from 'react-bootstrap'\n\n\n\nexport const InputForm = ( {userInput, onFormChange, onFormSubmit, onFormClear, onToggle, onSwap, onSwitch, onClearKey, onKeyError, onLengthError} ) => {\n\n    const [disableKeyLength, setDisableKeyLength] = useState(false)\n    const [requireKey, setRequireKey] = useState(false)\n    const [placeholder, setPlaceholder] = useState(\"Input Here... \\n\\nLeave 'Key' or 'Key Length' empty if unknown\")\n\n    const handleChange = (event) => {\n        onFormChange(event)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        onFormSubmit()\n    }\n\n    const handleClear = () => {\n        onFormClear()\n    }\n\n    const handleToggle = (event) => {\n        onToggle(event)\n        if(event === \"#encrypt\"){\n            setDisableKeyLength(true)\n            setRequireKey(true)\n            onClearKey()\n            setPlaceholder(\"Input Here...\")\n\n        }else if(event === \"#decrypt\"){\n            setDisableKeyLength(false)\n            setRequireKey(false)\n            setPlaceholder(\"Input Here... \\n\\nLeave 'Key' or 'Key Length' empty if unknown\")\n        }\n    }\n\n    const handleSwap = () => {\n        onSwap()\n    }\n\n    const handleSwitch = () => {\n        onSwitch()\n    }\n    \n    return(\n        <>        \n        <Card style={{height: window.innerHeight-110}}>\n            <Card.Header>\n                <Nav variant=\"tabs\" defaultActiveKey=\"#decrypt\" onSelect={handleToggle}>\n                <Nav.Item>\n                    <Nav.Link href=\"#decrypt\" >Decrypt</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                    <Nav.Link href=\"#encrypt\" >Encrypt</Nav.Link>\n                </Nav.Item>\n                </Nav>\n            </Card.Header>\n            <Card.Body>\n                <Form onSubmit={handleSubmit} noValidate>\n                    <Form.Group>\n                        <Form.Control as=\"textarea\" placeholder={placeholder} rows={8} name=\"addCard\" required \n                            value={userInput.addCard} onChange={handleChange}/>\n                    </Form.Group>\n\n                    <Form.Group>\n                    <Form.Row>\n                        <Col md={5}>\n                        <OverlayTrigger key='bottom' placement='bottom' \n                            overlay={<Tooltip >Enter <strong>English Letters</strong> Only</Tooltip>}>\n                            <Form.Control type=\"search\" placeholder=\"Enter Key\" name=\"key\" \n                            value={userInput.key} isInvalid={onKeyError} onChange={handleChange} />\n                        </OverlayTrigger>\n                        </Col>\n\n                        <Col md={2}>\n                        <OverlayTrigger key='bottom' placement='bottom' \n                            overlay={<Tooltip>Enter <strong>Numbers</strong> only</Tooltip>}>\n                            <Form.Control type=\"search\" placeholder=\"Key Length\" name=\"keyLength\" isInvalid={onLengthError} \n                                value={userInput.keyLength} onChange={handleChange} disabled={disableKeyLength}/>\n                        </OverlayTrigger>\n                        </Col>\n                        <Col md={{offset:1, span:0}} >\n                            <Swap onSwap={handleSwap} disabled={userInput.addCard === \"\" && userInput.translated === \"\"}/>\n                        </Col>\n                        <Col md=\"auto\" className=\"clearBtn\">\n                            <Clear onFormClear={handleClear} \n                                disabled={userInput.addCard === \"\" && userInput.key === \"\" && userInput.keyLength ===\"\" && userInput.translated === \"\"}/>\n                        </Col>\n                        <Col md=\"auto\">\n                            <Button variant=\"success\" type=\"submit\" \n                            disabled={(requireKey===true && userInput.key === \"\") || userInput.addCard === \"\"}> \n                            Submit </Button>\n                        </Col>\n                    </Form.Row>\n                    </Form.Group>\n\n                    \n                    <Form.Group>\n                        <Form.Control as=\"textarea\" rows={8} placeholder =\"Output Here...\" name=\"translated\" value={userInput.translated} onChange={handleChange}/>\n                    </Form.Group>\n                </Form>\n            </Card.Body>\n        </Card>\n        </>\n\n        \n    )\n}","import React, {useState} from 'react';\nimport { Form, Col, Row, Button} from 'react-bootstrap'\nimport RangeSlider from 'react-bootstrap-range-slider';\n\nexport const Settings = ({onIcChange, onFreqChange, freqTable}) => {\n    const [ic, setIc] = useState(615);\n\n    const handleIcChange = () =>{\n        onIcChange(ic)\n    }\n\n    const handleSelectTable = (event) =>{\n        onFreqChange(event.target.value)\n    }\n\n    const handleReset = () =>{\n        setIc(615)\n        onIcChange(615)\n        onFreqChange(\"wiki\")\n    }\n\n    return(\n        <Form className=\"settings\">\n            <Form.Label><strong>Index of Coincidence</strong></Form.Label>\n            <Form.Text className=\"sublabel\">Recommended Range [0.0600 - 0.0650]</Form.Text>\n            <Form.Group as={Row}>\n                <Col xs=\"9\">\n                    <RangeSlider value={ic} min={550} max={700} onChange={e => setIc(e.target.value)} \n                    tooltipLabel={ic=> `0.${ic}`} onAfterChange={handleIcChange}/>\n                </Col>\n                <Col xs=\"3\">\n                    <Form.Control value={ic / 10000}/>\n                </Col>\n            </Form.Group>\n            <Form.Group >\n                <Form.Label><strong>English Letter Frequency Table</strong></Form.Label>\n                <Form.Text className=\"sublabel\">Select Table Data from:</Form.Text>\n                <Form.Control as=\"select\" htmlSize={2} onChange={handleSelectTable} defaultValue=\"wiki\" value={freqTable}>\n                    <option value=\"wiki\">1) Wikipedia</option>\n                    <option value=\"cornell\">2) Cornell University</option>\n                    <option value=\"wellesley\">3) Wellesley College</option>\n                    <option value=\"practical\">4) Practical Cryptography</option>\n                </Form.Control>\n                <Form.Text style={{\"margin-top\":10}}>Sources:</Form.Text>\n                <ul>\n                    <li><Form.Text>https://en.wikipedia.org/wiki/Letter_frequency</Form.Text></li>\n                    <li><Form.Text>http://pi.math.cornell.edu/~mec/2003-2004/cryptography/subs/frequencies.html</Form.Text></li>\n                    <li><Form.Text>http://cs.wellesley.edu/~fturbak/codman/letterfreq.html</Form.Text></li>\n                    <li><Form.Text>http://practicalcryptography.com/cryptanalysis/letter-frequencies-various-languages/english-letter-frequencies/</Form.Text></li>\n                </ul>\n            </Form.Group>\n            <Button className=\"reset float-right\" variant=\"danger\" onClick={handleReset}>Reset to Defaults</Button>\n        </Form>\n    )\n}","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap'\n\nexport const ErrorModal = ({showModal, onClose}) => {\n    const handleClose = () => {\n      onClose()\n    }\n    return (\n      <>\n        <Modal\n          size=\"lg\"\n          show={showModal}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          centered\n        >\n          <Modal.Header style={{backgroundColor:'#ffbfbf', textAlign:'center'}}>\n            <Modal.Title style={{color:\"#383838\"}}>Error: Unable to Decrypt Inputted Cipher Text!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Possible reasons:\n            <ul>\n              <li>The Cipher Text is too short for Frequency Analysis</li>\n              <li>The Cipher Text is not derived from a Vigenère Encryption of a plaintext</li>\n            </ul>\n          </Modal.Body>\n          <Modal.Footer style={{backgroundColor:\"#f5f5f5\",paddingBottom:'0', paddingTop:'0'}}>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Understood\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n  ","import React from 'react';\nimport { Card, Button } from 'react-bootstrap'\nimport Loader from 'react-loader-spinner'\n\n\nexport const ResultCards = ({cards, onSelect}) => {\n    const handleSelect = (key, value) =>{\n        onSelect(key,value)\n    }\n    \n\n    if(cards.length === 0){\n        return (\n            <div className=\"loader\">\n                <Loader type=\"BallTriangle\" color=\"#00BFFF\" height={80} width={80} />\n                <br/>\n                <p>Loading...</p>\n            </div>\n        )\n    }\n    else{\n        \n        return(\n            <div>\n            <h6>Select the most probable result:</h6>\n            <div id=\"scrollBar\">\n                {Object.entries(cards).map(([key,value]) => {\n                    return(\n                    <>\n                        <Card className=\"historyCard\" style={{ width: 'auto', height: '9.3rem'}} >\n                            \n                            <Card.Body>\n                                <Card.Subtitle style={{maxHeight: '1rem', maxWidth:'46rem', overflow:\"hidden\"}}>{value[0]}</Card.Subtitle>\n                                <Card.Text style={{maxHeight: '4.5rem', maxWidth:'46rem', overflow:\"hidden\"}} >{value[1]}</Card.Text>\n                            </Card.Body>\n                            <Card.Header style={{ width: 'auto'}}>\n                                    <Card.Text>Key Length: {value[0].length}</Card.Text>\n                                    <Button className=\"select\" size=\"sm\" variant=\"outline-info\" onClick={() => handleSelect(value[0], value[1])}>Select</Button>\n                            </Card.Header>\n                        </Card>\n                    </>\n                    )\n                })}\n            </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { Modal } from 'react-bootstrap'\nimport { ResultCards} from './ResultCards'\n\nexport const ResultsModal = ({showModal, onClose, cards, onSelect}) => {\n    const handleClose = () => {\n      onClose()\n    }\n    \n    return (\n      <>\n        <Modal\n          size=\"lg\"\n          show={showModal}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          centered\n        >\n          <Modal.Header style={{backgroundColor:\"#e6f4ff\"}} closeButton>\n            <Modal.Title style={{color:\"#383838\"}}>Multiple Results Found!</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <ResultCards cards={cards} onSelect={onSelect}/>\n          </Modal.Body>\n          <Modal.Footer style={{backgroundColor:\"#f5f5f5\"}}>\n            <p>If the result you are looking for is not shown, try adjusting the Index of Coincidence (IC) in the [Advanced Settings] menu.\n              A lower IC will generate more flexible results whereas a higher IC will generate more strict results.\n            </p>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }","import React, {useState, useEffect, useReducer} from 'react';\nimport { HistoryCard } from './HistoryCard'\nimport { InputForm } from './InputForm'\nimport {Settings} from './Settings'\nimport { ErrorModal } from './Modal/ErrorModal'\nimport { ResultsModal } from './Modal/ResultsModal'\n\nimport { Row, Col, Card, Tab, Tabs} from 'react-bootstrap'\n\nexport const Home = () => {\n    const [showErrorModal, setErrorModal] = useState(false);\n    const handleCloseError = () => setErrorModal(false);\n    const handleShowError = () => {\n        setErrorModal(true);\n        setResultsModal(false);\n    }\n\n    const [showResultsModal, setResultsModal] = useState(false);\n    const handleCloseResults = () => {\n        setResultsModal(false);\n        setResults([])\n    }\n    const handleShowResults = () => setResultsModal(true);\n    const [results, setResults] = useState([]);\n\n    const [type, setType] = useState('#decrypt')\n\n    const [ic, setIc] = useState(0.0615)\n    const [freqTable, setFreqTable] = useState(\"wiki\")\n\n    const [keyError, setKeyError] = useState(false)\n    const [lengthError, setLengthError] = useState(false)\n\n\n    const [userInput, setUserInput] = useReducer(\n        (state, newState) => ({...state,  ...newState}),\n        {\n            addCard: '',\n            key: '',\n            keyLength: '',\n            translated: ''\n        }\n    )\n\n    const handleFormChange = (event) => {\n        const {name, value} = event.target;\n        setUserInput({[name]:value})\n        if(name===\"key\"){\n            if(value===\"\")setKeyError(false);\n            setUserInput({keyLength: ''});\n        }\n        if(name===\"keyLength\"){\n            if(value===\"\")setLengthError(false);\n            setUserInput({key: ''});\n        }\n    }\n\n    const handleFormSubmit = () => {\n        var sendJob = true\n        if (/[^a-zA-Z]/.test(userInput.key)){\n            setKeyError(true)\n            sendJob =false\n        }else{\n            setKeyError(false)\n        }\n        if(isNaN(userInput.keyLength)){\n            setLengthError(true)\n            sendJob =false\n        }else{\n            setLengthError(false)\n        }\n\n        if(sendJob){\n            if (type==='#decrypt' && userInput.key===\"\" && userInput.keyLength===\"\"){\n                handleShowResults();\n            }\n            console.log(\"before fetchv3\");\n            fetch('api/create', {\n                method: 'POST',\n                body: JSON.stringify({\n                    content: userInput.addCard,\n                    key: userInput.key,\n                    keyLength: userInput.keyLength,\n                    type: type,\n\n                    ic: ic,\n                    freqTable: freqTable\n                }),\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\"\n                }\n            }).then(response => response.json())\n            .then(message=> {\n                    console.log(message)\n                    if(message['error']==='true'){\n                        handleShowError();\n                    }else if(message['multiple']==='true'){\n                        console.log(message['results'])\n                        setResults(message['results'])\n                    }else{\n                        setResultsModal(false);\n                        setUserInput({translated: message['translatedText'] });\n                        setUserInput({key: message['key'] });\n                    }\n            })\n        }\n    }\n\n    const handleFormClear = () => {\n        setUserInput({addCard: ''});\n        setUserInput({key: ''});\n        setUserInput({keyLength: ''});\n        setUserInput({translated: ''});\n        setLengthError(false)\n        setKeyError(false)\n\n    }\n\n    const handleToggle = (event) => {\n        setType(event)\n    }\n\n    const handleSwap = () =>{\n        var temp = userInput.addCard;\n        setUserInput({addCard: userInput.translated});\n        setUserInput({translated: temp});\n    }\n\n\n    const handleClearKey = () => {\n        setUserInput({keyLength: ''});\n    }\n\n    const handleIcChange = (icChange) => {\n        setIc(icChange/10000)\n        console.log(icChange)\n    }\n\n    const handleFreqChange = (event) => {\n        setFreqTable(event)\n        console.log(event)\n    }\n\n    const handleSelect = (key, value) => {\n        setUserInput({translated: value});\n        setUserInput({key: key});\n        handleCloseResults();\n        setResults([]);\n    }\n\n    return (\n        <div className=\"home-wrapper\">\n            <ErrorModal showModal={showErrorModal} onClose={handleCloseError}/>\n            <ResultsModal showModal={showResultsModal} onClose={handleCloseResults} cards={results} onSelect={handleSelect}/>\n            <Row className=\"home\">\n                <Col md={8} className=\"inputForm\">\n                    <InputForm userInput={userInput} setUserInput={setUserInput} onFormChange={handleFormChange} onFormSubmit={handleFormSubmit} \n                    onFormClear={handleFormClear} onToggle={handleToggle} onSwap={handleSwap} onClearKey={handleClearKey} \n                    onKeyError={keyError} onLengthError={lengthError}/>\n                </Col>\n\n                <Col className=\"tabs\" >      \n                    <Tabs className=\"tabs-header\"defaultActiveKey=\"advanced\" id=\"uncontrolled-tab-example\"  >\n                        <Tab eventKey=\"advanced\" title=\"Settings\" style={{ width: \"auto\", height: window.innerHeight-166, paddingRight:0}}>\n                            <Settings onIcChange={handleIcChange} onFreqChange={handleFreqChange} freqTable={freqTable}/>\n                        </Tab>\n                    </Tabs>\n                </Col>\n            </Row>\n            <br />\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/title.b835c470.png\";","import React from 'react';\nimport { Navbar, Nav} from 'react-bootstrap'\nimport title from '../Icons/title.png'\n\nexport const NavBar = () => {\n    return (\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand className=\"title\"><img className=\"image\" height={60} src={title}/></Navbar.Brand>\n            <Nav className=\"ml-auto\"></Nav>\n\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n            <Nav className=\"ml-auto links\">\n                <Nav.Link>Home</Nav.Link>\n                <Nav.Link >Learn More</Nav.Link>\n            </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}","import React from 'react';\nimport { Navbar, Nav} from 'react-bootstrap'\n\nexport const Footer = () => {\n    return (\n        <Navbar className=\"footer\" fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Nav className=\"ml-auto\"><Nav.Link >Developed by Derrick Lam | Student at Stony Brook University | Jan 2021</Nav.Link></Nav>\n        </Navbar>\n    )\n}","import './App.scss';\nimport { Home } from './Components/Home'\nimport { NavBar} from './Components/NavBar'\nimport { Footer} from './Components/Footer'\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar/>\n      <Home/>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'; // or include from a CDN\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}